name: 'Stump Checks CI'
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  code-changes-check:
    runs-on: [ubuntu-22.04]
    outputs:
      changes: ${{steps.filter.outputs.changes}}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            apps: ./apps/**
            crates: ./crates/**
            docker: ./docker/**
            packages: ./packages/**

  check-rust:
    needs: code-changes-check
    if: "!contains(github.event.pull_request.head.ref, 'release/v') && needs.code-changes-check.outputs.changes != '[]'"
    name: Rust checks
    runs-on: [ubuntu-22.04]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup rust
        uses: ./.github/actions/setup-rust

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork && 'non-fork-' || 'fork-' }}${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo checks
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate code coverage data
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  check-typescript:
    needs: code-changes-check
    if: "!contains(github.event.pull_request.head.ref, 'release/v') && needs.code-changes-check.outputs.changes != '[]'"
    name: TypeScript checks
    runs-on: [ubuntu-22.04]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.0.0'

      - name: Install yarn
        shell: bash
        run: npm install -g yarn

      - name: Setup node (yarn cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20.0.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run TypeScript lints
        run: yarn lint
