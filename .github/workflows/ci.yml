name: CI

on:
  push:
    branches: [ main ]

jobs:

  rust:
    runs-on: ubuntu-latest
    steps:
    # setup
    - uses: actions/checkout@v3
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    # run checks
    - name: Run cargo check
      run: cargo check
    - name: Run clippy
      run: cargo clippy
    - name: Run formatter
      run: cargo fmt --check

  typescript:
    runs-on: ubuntu-latest
    steps:
    # setup
    - uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - uses: pnpm/action-setup@v2.0.1
      name: Install pnpm
      id: pnpm-install
      with:
        version: 7
        run_install: false
    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    - name: Install dependencies
      run: pnpm install
    # run checks
    - name: TypeScript check for apps/client
      run: pnpm tsc --noEmit
      working-directory: apps/client
    - name: TypeScript check for apps/website
      run: pnpm tsc --noEmit
      working-directory: apps/website
