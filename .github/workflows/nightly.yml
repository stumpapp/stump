name: 'Stump nightly build and release'

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  # TODO: extract this into a reusable action that takes tags as input
  docker-build:
    name: Build docker image
    runs-on: [self-hosted]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get commit short sha
        # run: echo "::set-output name=GIT_REV::$(git rev-parse --short "$GITHUB_SHA")"
        run: echo "GIT_REV=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Setup rust
        uses: ./.github/actions/setup-cargo

      - name: Generate Prisma client
        uses: ./.github/actions/setup-prisma

      - name: Setup buildx platforms
        # if github.event_name == 'pull_request', platform is only linux/amd64. Otherwise, we
        # build for the existing vars.SUPPORTED_DOCKER_PLATFORMS
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "SUPPORTED_DOCKER_PLATFORMS=linux/amd64" >> $GITHUB_ENV
            echo "SETUP_QEMU=0" >> $GITHUB_ENV
          else
            echo "SUPPORTED_DOCKER_PLATFORMS=${{ vars.SUPPORTED_DOCKER_PLATFORMS }}" >> $GITHUB_ENV
            echo "SETUP_QEMU=1" >> $GITHUB_ENV
          fi

      - name: Setup Docker layers cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        # Only setup qemu if we're not only building for linux/amd64
        if: ${{ env.SETUP_QEMU == 1 }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run buildx build
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "GIT_REV=${{ env.GIT_REV }}"
          file: scripts/release/Dockerfile
          platforms: ${{ env.SUPPORTED_DOCKER_PLATFORMS }}
          # When a PR is opened against develop, we want to build the image but not push it.
          load: ${{ github.event_name == 'pull_request' }}
          # When a PR is merged into develop, we want to build and push the image. Note that
          # unless there was a push without a PR, much of the docker build will come out of
          # the cache.
          push: ${{ github.event_name == 'push' }}
          tags: aaronleopold/stump:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # https://github.com/docker/build-push-action/issues/252
        # TODO: https://github.com/moby/buildkit/issues/1896
      - name: Move buildx cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # TODO: uncomment once I resolve cross compilation with my single self-hosted runner
  # build-web:
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       plaform: [ubuntu-20.04]
  #   name: Build web application
  #   runs-on: ${{ matrix.plaform }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Build web
  #       uses: ./.github/actions/build-web

  #     - name: Upload web build
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: web
  #         upload-path: apps/web/dist

  # build-server:
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       plaform: [ubuntu-20.04] # We should probably build for window and macos
  #   name: Build server and desktop
  #   runs-on: ${{ matrix.plaform }}
  #   needs: build-web
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Build server
  #       uses: ./.github/actions/build-server
  #       with:
  #         platform: ${{ matrix.plaform }}

  #     - name: Upload stump server
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: stump_server
  #         upload-path: target/release/stump_server

  #     - uses: tauri-apps/tauri-action@v0

  #     - name: Upload desktop
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: stump-desktop
  #         upload-path: target/release/bundle
