name: 'Release CI'

# This workflow triggers when a PR is merged into `main`, but jobs have conditions to only run when:
# - A PR is closed, merged into `main`, from a branch that matches the pattern `release/v*.*.*`

on:
  pull_request:
    branches:
      - main
    types: [opened, closed, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  parse-semver:
    if: contains(github.event.pull_request.head.ref, 'release/v')
    name: Parse semver version
    runs-on: [ubuntu-22.04]
    outputs:
      version: ${{ steps.tag.outputs.version }}
      tags: ${{ steps.docker-tags.outputs.tags }}
    steps:
      - name: Extract version from branch name
        id: tag
        run: echo "version=$(echo ${{ github.event.pull_request.head.ref }} | sed -e 's/release\/v//')" >> $GITHUB_OUTPUT

      - name: Print the tag
        run: echo "The output version is ${{ steps.tag.outputs.version }}"

      - name: Configure docker tags
        id: docker-tags
        run: |
          echo "tags=latest,nightly,${{ steps.tag.outputs.version }}" >> $GITHUB_OUTPUT
          echo "Docker tags are latest, nightly, and ${{ steps.tag.outputs.version }}"

  push-or-load:
    if: contains(github.event.pull_request.head.ref, 'release/v')
    name: Configure docker load/push
    runs-on: [ubuntu-22.04]
    outputs:
      load: ${{ steps.configure.outputs.load }}
      push: ${{ steps.configure.outputs.push }}
      platforms: ${{ steps.configure.outputs.platforms }}
    steps:
      - name: Configure environment
        id: configure
        run: |
          if [[ ${{ github.event.pull_request.merged }} == true ]]; then
            echo "push=true" >> $GITHUB_OUTPUT
            echo "load=false" >> $GITHUB_OUTPUT
            echo "platforms=linux/arm64/v8,linux/amd64" >> $GITHUB_OUTPUT
          else
            echo "push=false" >> $GITHUB_OUTPUT
            echo "load=true" >> $GITHUB_OUTPUT
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          fi

      - name: Print the configuration
        run: |
          echo "Platforms: ${{ steps.configure.outputs.platforms }}"
          echo "Load: ${{ steps.configure.outputs.load }}"
          echo "Push: ${{ steps.configure.outputs.push }}"

  build-stable-docker:
    if: contains(github.event.pull_request.head.ref, 'release/v')
    name: Build docker image
    runs-on: [ubuntu-22.04]
    needs: [parse-semver, push-or-load]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push docker image
        uses: ./.github/actions/build-docker
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          tags: ${{ needs.parse-semver.outputs.tags }}
          load: ${{ needs.push-or-load.outputs.load }}
          push: ${{ needs.push-or-load.outputs.push }}
          platforms: ${{ needs.push-or-load.outputs.platforms }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}

  # build-web-app:
  #   name: Build web app
  #   runs-on: [self-hosted]
  #   if: false # TODO: Enable this once 0.1.0 is ready
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Build the app
  #       uses: ./.github/actions/build-web

  #     - name: Upload the build
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: webapp
  #         upload-path: apps/web/dist

  # build-server:
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       platform: [macos, windows]
  #   name: Build server app
  #   needs: build-web
  #   runs-on: ${{ matrix.platform }}
  #   if: false # TODO: Enable this once 0.1.0 is ready
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Build the server
  #       uses: ./.github/actions/build-server
  #       with:
  #         platform: ${{ matrix.platform }}

  #     - name: Upload the server binary
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: stump_server-${{ matrix.platform }}
  #         upload-path: target/release/stump_server

  # # TODO: Investigate if I can just merge this with the above
  # build-linux-server:
  #   name: Build server app (self-hosted runner)
  #   needs: build-web
  #   runs-on: [self-hosted]
  #   if: false # TODO: Enable this once 0.1.0 is ready
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Build the server
  #       uses: ./.github/actions/build-server
  #       with:
  #         platform: 'linux'

  #     - name: Upload the server binary
  #       uses: ./.github/actions/upload-artifact
  #       with:
  #         upload-name: stump_server-linux
  #         upload-path: target/release/stump_server
